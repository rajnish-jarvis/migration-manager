<div class="form-container">
  <h2>Create a New Migration</h2>

  <%= form_with url: migration_manager.create_migration_path, method: :post do |f| %>

    <div class="form-group">
      <label class="form-label">Operation Type</label>
      <%= f.select :operation, ['Create Table', 'Add Column', 'Remove Column'], {}, id: "operation_type", class: "form-select" %>
    </div>

    <!-- Table Name Field (Shown for Create Table) -->
    <div class="form-group" id="table_name_field">
      <label class="form-label">Table Name</label>
      <%= f.text_field :table_name, class: "form-input" %>
    </div>

    <!-- Table Selection Dropdown (Shown for Add Column) -->
    <div class="form-group" id="table_select_field" style="display: none;">
      <label class="form-label">Select Table</label>
      <%= f.select :existing_table, @tables, {}, class: "form-select" %>
    </div>

    <div id="columns_section">
      <div class="form-group column-group">
        <label class="form-label">Column Name</label>
        <input type="text" name="columns[][name]" class="form-input" placeholder="Enter column name">

        <label class="form-label">Column Type</label>
        <select name="columns[][type]" class="form-select">
          <option value="string">String</option>
          <option value="integer">Integer</option>
          <option value="boolean">Boolean</option>
          <option value="text">Text</option>
          <option value="date">Date</option>
          <option value="datetime">Datetime</option>
          <option value="jsonb">JSONB</option>
        </select>

        <label class="form-label">Default Value</label>
        <input type="text" name="columns[][default]" class="form-input" placeholder="Optional default value">

        <button type="button" class="remove-column form-button">Remove</button>
      </div>
    </div>

    <button type="button" id="add_column" class="form-button">Add Column</button>

    <%= f.submit "Create Migration", class: "form-button" %>
  <% end %>
</div>
<style>
    /* Custom styles for Migration Manager */
    .form-container {
        max-width: 600px;
        margin: 20px auto;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-label {
        font-weight: bold;
        display: block;
        margin-bottom: 5px;
    }

    .form-input, .form-select {
        width: 100%;
        padding: 8px;
        border: 1px solid #ced4da;
        border-radius: 5px;
    }

    .hidden {
        display: none;
    }

    .form-button {
        background-color: #007bff;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .form-button:hover {
        background-color: #0056b3;
    }

    .column-group {
        border: 1px solid #ddd;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
    }

    .remove-column-btn {
        background-color: red;
        color: white;
        border: none;
        padding: 5px;
        cursor: pointer;
        margin-top: 5px;
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        const operationSelect = document.getElementById("operation_type");
        const tableNameField = document.getElementById("table_name_field");
        const tableSelectField = document.getElementById("table_select_field");
        const columnsSection = document.getElementById("columns_section");
        const addColumnButton = document.getElementById("add_column");

        function toggleTableFields() {
            if (operationSelect.value === "Create Table") {
                tableNameField.style.display = "block";  // Show text input for table name
                tableSelectField.style.display = "none"; // Hide dropdown
                columnsSection.style.display = "block";  // Show columns section
                addColumnButton.style.display = "block";
            } else if (operationSelect.value === "Add Column") {
                tableNameField.style.display = "none";   // Hide text input
                tableSelectField.style.display = "block"; // Show dropdown for table selection
                columnsSection.style.display = "block";  // Show columns section
                addColumnButton.style.display = "block";
            } else {
                tableNameField.style.display = "none";   // Hide both for other operations
                tableSelectField.style.display = "none";
                columnsSection.style.display = "none";
                addColumnButton.style.display = "none";
            }
        }

        operationSelect.addEventListener("change", toggleTableFields);
        toggleTableFields(); // Initial check on page load

        // Functionality for adding/removing columns dynamically
        addColumnButton.addEventListener("click", function() {
            const columnGroup = document.createElement("div");
            columnGroup.className = "form-group column-group";
            columnGroup.innerHTML = `
                <label class="form-label">Column Name</label>
                <input type="text" name="columns[][name]" class="form-input" placeholder="Enter column name">

                <label class="form-label">Column Type</label>
                <select name="columns[][type]" class="form-select">
                    <option value="string">String</option>
                    <option value="integer">Integer</option>
                    <option value="boolean">Boolean</option>
                    <option value="text">Text</option>
                    <option value="date">Date</option>
                    <option value="datetime">Datetime</option>
                    <option value="jsonb">JSONB</option>
                </select>

                <label class="form-label">Default Value</label>
                <input type="text" name="columns[][default]" class="form-input" placeholder="Optional default value">

                <button type="button" class="remove-column form-button">Remove</button>
            `;

            columnGroup.querySelector(".remove-column").addEventListener("click", function() {
                columnGroup.remove();
            });

            columnsSection.appendChild(columnGroup);
        });

        document.querySelectorAll(".remove-column").forEach(button => {
            button.addEventListener("click", function() {
                button.parentElement.remove();
            });
        });
    });
</script>